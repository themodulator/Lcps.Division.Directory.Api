@using Lcps.Division.Directory.Providers;
@using Lcps.Division.Directory.Repository;
@using PagedList;
@using PagedList.Mvc
@using Lcps.Division.Directory.API.Areas.Manage.Models;

@model PagedList<DirectoryMember>


@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Manage/Views/Shared/_Layout.cshtml";
    ViewBag.Page = Request["page"];
}

<h3>Directory Member Preview</h3>

<p>
    <a href="@Url.Action("MemberPreview")" class="btn btn-info">All <span class="badge">@ViewBag.Total</span></a>
    <a href="@Url.Action("MemberPreview", new { @sync = ImportSyncStatus.Current })" class="btn btn-default">Current <span class="badge">@ViewBag.Current</span></a>
    <a href="@Url.Action("MemberPreview", new { @sync = ImportSyncStatus.Insert })" class="btn btn-success">Insert <span class="badge">@ViewBag.Insert</span></a>
    <a href="@Url.Action("MemberPreview", new { @sync = ImportSyncStatus.Update })" class="btn btn-warning">Update <span class="badge">@ViewBag.Update</span></a>
    <a href="@Url.Action("MemberPreview", new { @sync = ImportSyncStatus.Error })" class="btn btn-danger">Errors <span class="badge">@ViewBag.Error</span></a>
</p>

Total: @ViewBag.Total Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model,
  page => Url.Action("MemberPreview", new { page }))

<a href="@Url.Action("Importmembers")" class="btn btn-warning">Import</a>

<table class="table table-hover table-striped table-condensed">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().InternalId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().SurName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().GivenName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().MiddleName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().UserName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().DOB)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Gender)
        </th>
        <th>
            Scope
        </th>
        <th>Sync Status</th>
    </tr>

    @foreach (DirectoryMember item in Model)
    {
        <tr>
            <td>
                @item.InternalId
            </td>
            <td>
                @item.SurName
            </td>
            <td>
                @item.GivenName
            </td>
            <td>
                @item.MiddleName
            </td>
            <td>
                @item.Email
            </td>
            <td>
                @item.UserName
            </td>
            <td>
                @(((DateTime)item.DOB).ToShortDateString())
            </td>
            <td>
                @item.Gender
            </td>
            <td>
                @item.GetMembershipScopeCaption()
            </td>

            <td class="text-@item.GetBootStrapStatus(item.SyncStatus)">
                @if (item.SyncStatus == ImportSyncStatus.Error)
                {
                    @Html.Raw(@item.Exception.ToUL())
                }
                else
                {
                    @item.SyncStatus
                }
            </td>

        </tr>
    }

</table>


